{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/School/plannit/3002_project/3002_project/3002_project/src/components/DashboardTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Grid, Typography } from '@mui/material';\nimport { Avatar } from '@mui/material';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline'; //fake data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet status = ['Needs Watering', 'Needs Sunlight', 'Needs Fertilising'];\nlet priority = ['HIGH', 'LOW', 'MEDIUM'];\nlet plantName = ['Salad Leaves', 'Radish', 'Potatoes', 'Peas', 'Spring Onion', 'Onions', 'Garlic', 'tomatoes', 'Spinach', 'Lettuce'];\nlet date = 'May 28, 2021';\nlet Plants = [];\n\nfor (let i = 0; i < plantName.length; i++) {\n  Plants[i] = {\n    PlantName: plantName[i],\n    Status: status[Math.floor(Math.random() * status.length)],\n    Date: date,\n    Priority: priority[Math.floor(Math.random() * priority.length)]\n  };\n}\n\n;\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  tableContainer: {\n    borderRadius: 15,\n    marginRight: 30,\n    marginBottom: 30,\n    marginTop: 50,\n    maxWidth: 1000\n  },\n  // tableHeaderCell: {\n  //     fontWeight:'bold',\n  //     color : 'grey'\n  // },\n  // subText: {\n  //     fontSize: 12,\n  //     color :'#c8cad1',\n  //     fontWeight: 'bold',\n  // }, \n  priority: {\n    fontWeight: 'bold',\n    color: 'white',\n    fontSize: '0.75rem',\n    backgroundColor: 'grey',\n    borderRadius: 15,\n    padding: '3px 10px',\n    display: 'inline-block',\n    textAlign: 'center'\n  },\n  page: {\n    alignContent: 'right'\n  }\n}));\n\nfunction DashboardTable() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    className: classes.tableContainer,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            colSpan: 2,\n            height: \"60\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              fontWeight: \"bold\",\n              variant: \"h6\",\n              children: \"All Plants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              fontWeight: \"bold\",\n              color: \"#9e9fa4\",\n              children: \"Plant Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              fontWeight: \"bold\",\n              color: \"#9e9fa4\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              fontWeight: \"bold\",\n              color: \"#9e9fa4\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              fontWeight: \"bold\",\n              color: \"#9e9fa4\",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: Plants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 2,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: row.PlantName,\n                  src: \".\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 10,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  fontWeight: \"bold\",\n                  color: \"#2a2a2c\",\n                  children: [row.PlantName, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  variant: \"body2\",\n                  children: 'updated 5 days ago'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              fontWeight: \"bold\",\n              color: \"#2a2a2c\",\n              children: row.Status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              children: ['on 24.05.2019', \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              fontWeight: \"bold\",\n              color: \"#2a2a2c\",\n              children: row.Date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              children: ['5.00 PM', \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.priority,\n              style: {\n                backgroundColor: row.Priority === 'HIGH' && 'red' || row.Priority === 'MEDIUM' && 'orange' || row.Priority === 'LOW' && 'green'\n              },\n              children: row.Priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 15],\n          component: \"div\",\n          count: Plants.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DashboardTable, \"7BftIzpgW+sEagrK3boEUppYm9s=\", false, function () {\n  return [useStyles];\n});\n\n_c = DashboardTable;\nexport default DashboardTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardTable\");","map":{"version":3,"sources":["/Users/frankie/School/plannit/3002_project/3002_project/3002_project/src/components/DashboardTable.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Grid","Typography","Avatar","TableFooter","TablePagination","Container","CssBaseline","status","priority","plantName","date","Plants","i","length","PlantName","Status","Math","floor","random","Date","Priority","useStyles","theme","table","minWidth","tableContainer","borderRadius","marginRight","marginBottom","marginTop","maxWidth","fontWeight","color","fontSize","backgroundColor","padding","display","textAlign","page","alignContent","DashboardTable","classes","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","slice","map","row","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {makeStyles} from '@mui/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Grid, Typography } from '@mui/material';\nimport {Avatar} from '@mui/material';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline';\n\n//fake data\nlet status = ['Needs Watering','Needs Sunlight', 'Needs Fertilising'];\nlet priority = ['HIGH', 'LOW', 'MEDIUM'];\nlet plantName=['Salad Leaves','Radish' , 'Potatoes', 'Peas', 'Spring Onion', 'Onions',\n'Garlic', 'tomatoes','Spinach','Lettuce'];\nlet date = 'May 28, 2021';\nlet Plants = [];\nfor (let i = 0; i< plantName.length; i++) {\n    Plants[i] = {\n        PlantName : plantName[i],\n        Status : status[Math.floor(Math.random()* status.length)],\n        Date : date,\n        Priority: priority[Math.floor(Math.random()* priority.length)],\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    table:{\n        minWidth: 650,\n    },\n    tableContainer: {\n        borderRadius: 15,\n        marginRight: 30,\n        marginBottom: 30,\n        marginTop: 50,\n        maxWidth: 1000\n    },\n    // tableHeaderCell: {\n    //     fontWeight:'bold',\n    //     color : 'grey'\n    // },\n    // subText: {\n    //     fontSize: 12,\n    //     color :'#c8cad1',\n    //     fontWeight: 'bold',\n    // }, \n    priority: {\n        fontWeight: 'bold',\n        color:'white',\n        fontSize: '0.75rem',\n        backgroundColor: 'grey',\n        borderRadius: 15,\n        padding:'3px 10px',\n        display: 'inline-block',\n        textAlign: 'center'\n\n    },\n    page:{\n        alignContent:'right'\n    }\n}));\n\nfunction DashboardTable() {\n    const classes = useStyles();\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <TableContainer component={Paper} className = {classes.tableContainer}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"left\" colSpan={2} height='60' >\n                    <Typography fontWeight = 'bold' variant = 'h6' >\n                        All Plants\n                    </Typography>\n                </TableCell>\n                </TableRow>\n              <TableRow>\n                <TableCell>\n                    <Typography fontWeight = 'bold' color = '#9e9fa4'>\n                        Plant Details\n                    </Typography>\n                </TableCell>\n                <TableCell>\n                    <Typography fontWeight = 'bold' color = '#9e9fa4'>\n                        Status\n                    </Typography>\n                </TableCell>\n                <TableCell>\n                    <Typography fontWeight = 'bold' color = '#9e9fa4'>\n                        Date\n                    </Typography>\n                </TableCell>\n                <TableCell>\n                    <Typography fontWeight = 'bold' color = '#9e9fa4'>\n                        Priority\n                    </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Plants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow\n                  key={row.name} \n                >\n                  <TableCell > \n                    <Grid container>\n                    <Grid item lg = {2}>\n                        <Avatar alt ={row.PlantName} src= '.'/> \n                    </Grid>\n                    <Grid item lg = {10}>\n                        <Typography fontWeight = 'bold' color = '#2a2a2c'>{row.PlantName} </Typography> \n                        <Typography color ='textSecondary' variant = 'body2'>{'updated 5 days ago'}</Typography> \n                    </Grid>\n                    </Grid>\n                  </TableCell>\n                  <TableCell >\n                      <Typography fontWeight = 'bold' color = '#2a2a2c'>\n                          {row.Status}\n                      </Typography>\n                      <Typography color ='textSecondary' variant = 'body2' >{'on 24.05.2019'} </Typography> \n                  </TableCell>\n                  <TableCell >\n                      <Typography fontWeight = 'bold' color = '#2a2a2c'>\n                          {row.Date}\n                      </Typography>\n                      <Typography color ='textSecondary' variant = 'body2'>{'5.00 PM'} </Typography> \n                  </TableCell>\n                  <TableCell >\n                      <Typography \n                        className={classes.priority}\n                        style={{\n                            backgroundColor:\n                            ((row.Priority === 'HIGH' && 'red') ||\n                            (row.Priority === 'MEDIUM' && 'orange') ||\n                            (row.Priority === 'LOW' && 'green'))\n                        }}\n                        >{row.Priority}\n                      </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            <TableFooter>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 15]}\n                component=\"div\"\n                count={Plants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}/> \n            </TableFooter>\n          </Table>\n        </TableContainer>\n        \n      );\n}\n\nexport default DashboardTable;"]},"metadata":{},"sourceType":"module"}