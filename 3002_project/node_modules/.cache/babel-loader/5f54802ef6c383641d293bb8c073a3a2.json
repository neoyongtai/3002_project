{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/School/plannit/3002_project/3002_project/3002_project/src/components/Individual.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Container, Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { Grid } from '@mui/material';\nimport { Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea } from '@mui/material';\nimport { TextField, CardHeader, Tab, Tabs } from '@mui/material/';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Select, MenuItem } from '@mui/material/';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Avatar } from '@mui/material';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport SearchIcon from '@mui/icons-material/Search';\nimport InputAdornment from '@mui/material/InputAdornment'; // Data \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  Container: {\n    marginTop: 50,\n    maxWidth: 1000\n  },\n  page: {\n    alignContent: 'right'\n  }\n}));\nlet plantName = ['Salad Leaves', 'Radish', 'Potatoes', 'Peas', 'Spring Onion', 'Onions', 'Garlic', 'tomatoes', 'Spinach', 'Lettuce'];\nlet Plants = [];\nconst Input = styled('input')({\n  display: 'none'\n});\n\nfunction Individual() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.Container,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            fontWeight: \"bold\",\n            children: \"Salad Leaves\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contained-button-file\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              accept: \"image/*\",\n              id: \"contained-button-file\",\n              multiple: true,\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              component: \"span\",\n              children: \"+ Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        style: {\n          marginTop: \"2rem\",\n          padding: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 400\n          },\n          style: {\n            marginRight: \"1.5rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"140\",\n              image: \"./images/houseplant.jpg\",\n              alt: \"salad leaves\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h8\",\n                component: \"div\",\n                children: \"Date: 05-05-2021\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 400\n          },\n          children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"140\",\n              image: \"./images/houseplant.jpg\",\n              alt: \"salad leaves\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h8\",\n                component: \"div\",\n                children: \"Date: 15-04-2021\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        style: {\n          marginTop: \"2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            fontWeight: \"bold\",\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          fontWeight: \"bold\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search for notification\",\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"notifications\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"suggestionCell\",\n              children: \"Suggestion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"status2Cell\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"date2Cell\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"priority2Cell\",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"plantNameCell\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: Plants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: \"bold\",\n                color: \"#2a2a2c\",\n                children: row.Suggestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: [row.Reason, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: \"bold\",\n                color: \"#2a2a2c\",\n                children: row.Status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: ['on 24.05.2019', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: \"bold\",\n                color: \"#2a2a2c\",\n                children: row.Date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: ['5.00 PM', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.priority,\n                style: {\n                  backgroundColor: row.Priority === 'HIGH' && 'red' || row.Priority === 'MEDIUM' && 'orange' || row.Priority === 'LOW' && 'green'\n                },\n                children: row.Priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 10,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    fontWeight: \"bold\",\n                    color: \"#2a2a2c\",\n                    children: [row.PlantName, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10, 15],\n            component: \"div\",\n            count: Plants.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            onPageChange: handleChangePage,\n            onRowsPerPageChange: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Individual, \"7BftIzpgW+sEagrK3boEUppYm9s=\", false, function () {\n  return [useStyles];\n});\n\n_c = Individual;\nexport default Individual;\n\nvar _c;\n\n$RefreshReg$(_c, \"Individual\");","map":{"version":3,"sources":["/Users/frankie/School/plannit/3002_project/3002_project/3002_project/src/components/Individual.js"],"names":["React","Container","Typography","makeStyles","Grid","Box","styled","Button","Card","CardContent","CardMedia","CardActionArea","TextField","CardHeader","Tab","Tabs","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Select","MenuItem","DeleteIcon","PropTypes","Link","Avatar","TableFooter","TablePagination","SearchIcon","InputAdornment","useStyles","theme","table","minWidth","marginTop","maxWidth","page","alignContent","plantName","Plants","Input","display","Individual","classes","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","flexGrow","padding","marginRight","startAdornment","slice","map","row","Suggestion","Reason","Status","Date","priority","backgroundColor","Priority","PlantName","name","length"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Container, Typography} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { Grid } from '@mui/material';\nimport { Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea } from '@mui/material';\nimport {TextField, CardHeader, Tab, Tabs} from '@mui/material/';\nimport {Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,IconButton,Select,MenuItem} from '@mui/material/';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {PropTypes} from 'prop-types'\nimport { Link } from 'react-router-dom';\nimport {Avatar} from '@mui/material';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport SearchIcon from '@mui/icons-material/Search';\nimport InputAdornment from '@mui/material/InputAdornment';\n\n\n// Data \n\nconst useStyles = makeStyles((theme) => ({\n    table:{\n        minWidth: 650,\n    },\n    Container: {\n        marginTop: 50,\n        maxWidth: 1000,\n    },\n    page:{\n        alignContent:'right'\n    }\n}));\n\nlet plantName=['Salad Leaves', 'Radish' , 'Potatoes', 'Peas', 'Spring Onion', 'Onions',\n'Garlic', 'tomatoes', 'Spinach', 'Lettuce'];\nlet Plants = [];\n\nconst Input = styled('input')({\n    display: 'none',\n  });\n\nfunction Individual() {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n    return (\n        <Container className={classes.Container}>\n            <Box sx={{ flexGrow: 1 }}>\n                <Grid container spacing={2}>\n                    <Grid item xs={10}>\n                        <Typography variant=\"h5\" fontWeight = \"bold\">Salad Leaves</Typography>\n                    </Grid>\n                    <Grid item xs={2}>\n                    <label htmlFor=\"contained-button-file\">\n                        <Input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" />\n                        <Button variant=\"contained\" component=\"span\">\n                          + Upload\n                        </Button>\n                    </label>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2} style={{marginTop: \"2rem\", padding: \"20px\"}}>\n                    <Card sx={{ maxWidth: 400 }} style={{marginRight: \"1.5rem\"}}>\n                        <CardActionArea>\n                            <CardMedia\n                              component=\"img\"\n                              height=\"140\"\n                              image=\"./images/houseplant.jpg\"\n                              alt=\"salad leaves\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h8\" component=\"div\">\n                                  Date: 05-05-2021\n                                </Typography>\n                            </CardContent>\n                      </CardActionArea>\n                    </Card>\n                    <Card sx={{ maxWidth: 400 }}>\n                        <CardActionArea>\n                            <CardMedia\n                              component=\"img\"\n                              height=\"140\"\n                              image=\"./images/houseplant.jpg\"\n                              alt=\"salad leaves\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h8\" component=\"div\">\n                                  Date: 15-04-2021\n                                </Typography>\n                            </CardContent>\n                      </CardActionArea>\n                    </Card>\n                </Grid>\n                <Grid container spacing={2} style={{marginTop: \"2rem\"}}>\n                    <Grid item xs={10}>\n                        <Typography variant=\"h5\" fontWeight = \"bold\">Notifications</Typography>\n                    </Grid>\n                </Grid>\n            </Box>\n\n      <Grid container spacing={2}>\n        <Grid item xs={6} md={8}>\n          <Typography variant=\"h5\" fontWeight = \"bold\">Notifications</Typography>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <TextField label=\"Search for notification\"\n            InputProps={{\n            startAdornment: (\n            <InputAdornment position=\"start\">\n              <IconButton>\n                <SearchIcon/>\n              </IconButton>\n            </InputAdornment>\n            )\n          }}\n          />\n        </Grid>\n      </Grid>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"notifications\">\n          <TableHead>\n            <TableRow>\n              <TableCell data-testid={\"suggestionCell\"}>Suggestion</TableCell>\n              <TableCell data-testid={\"status2Cell\"}>Status</TableCell>\n              <TableCell data-testid={\"date2Cell\"}>Date</TableCell>\n              <TableCell data-testid={\"priority2Cell\"}>Priority</TableCell>\n              <TableCell data-testid={\"plantNameCell\"}>Name</TableCell>\n            </TableRow>\n          </TableHead>\n            <TableBody>\n              {Plants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow\n                key={row.name}\n              >\n                <TableCell >\n                    <Typography fontWeight = 'bold' color = '#2a2a2c'>\n                        {row.Suggestion}\n                    </Typography>\n                    <Typography color ='textSecondary' variant = 'body2' >{row.Reason} </Typography>\n                </TableCell>\n                <TableCell >\n                    <Typography fontWeight = 'bold' color = '#2a2a2c'>\n                        {row.Status}\n                    </Typography>\n                    <Typography color ='textSecondary' variant = 'body2' >{'on 24.05.2019'} </Typography>\n                </TableCell>\n                <TableCell >\n                    <Typography fontWeight = 'bold' color = '#2a2a2c'>\n                        {row.Date}\n                    </Typography>\n                    <Typography color ='textSecondary' variant = 'body2'>{'5.00 PM'} </Typography>\n                </TableCell>\n                <TableCell >\n                    <Typography\n                      className={classes.priority}\n                      style={{\n                          backgroundColor:\n                          ((row.Priority === 'HIGH' && 'red') ||\n                          (row.Priority === 'MEDIUM' && 'orange') ||\n                          (row.Priority === 'LOW' && 'green'))\n                      }}\n                      >{row.Priority}\n                    </Typography>\n                </TableCell>\n                <TableCell >\n                  <Grid container>\n                  <Grid item lg = {10}>\n                      <Typography fontWeight = 'bold' color = '#2a2a2c'>{row.PlantName} </Typography>\n                  </Grid>\n                  </Grid>\n                </TableCell>\n              </TableRow>\n            ))}\n            </TableBody>\n            <TableFooter>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 15]}\n                component=\"div\"\n                count={Plants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}/>\n            </TableFooter>\n        </Table>\n      </TableContainer>\n      <br/>\n\n        </Container>\n    );\n}\n\n\nexport default Individual;"]},"metadata":{},"sourceType":"module"}